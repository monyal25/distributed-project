{"ast":null,"code":"var _jsxFileName = \"/Users/sumithramounika/Desktop/SCU courses/distributed systems/MY  DS/weather-app/weather-frontend/src/components/WeatherAlerts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAlerts = () => {\n  _s();\n  const [subscribedTopics, setSubscribedTopics] = useState([]);\n  const [alert, setAlert] = useState('');\n  const topics = ['LosAngeles', 'SanFrancisco', 'SouthernCalifornia']; // Available topics\n\n  const subscribeToTopic = topic => {\n    // Simulate subscribing to a topic\n    setSubscribedTopics(prev => [...prev, topic]);\n    console.log(`Subscribed to ${topic} alerts`);\n  };\n\n  // Simulate receiving an alert for subscribed topics\n  useEffect(() => {\n    // Here, you would ideally use WebSocket or another method to listen for updates from the Kafka consumer\n    const interval = setInterval(() => {\n      if (subscribedTopics.length > 0) {\n        // Simulate receiving an alert for a subscribed topic\n        setAlert(`Weather alert for ${subscribedTopics.join(', ')}: Severe weather approaching!`);\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [subscribedTopics]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subscribe to Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), topics.map(topic => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => subscribeToTopic(topic),\n        children: [\"Subscribe to \", topic, \" Alerts\"]\n      }, topic, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Subscribed Topics:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: subscribedTopics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: topic\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), alert && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherAlerts, \"/vNLLPvEVKR2uzTQoXzvuFEW54w=\");\n_c = WeatherAlerts;\nexport default WeatherAlerts;\nvar _c;\n$RefreshReg$(_c, \"WeatherAlerts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherAlerts","_s","subscribedTopics","setSubscribedTopics","alert","setAlert","topics","subscribeToTopic","topic","prev","console","log","interval","setInterval","length","join","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","index","_c","$RefreshReg$"],"sources":["/Users/sumithramounika/Desktop/SCU courses/distributed systems/MY  DS/weather-app/weather-frontend/src/components/WeatherAlerts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WeatherAlerts = () => {\n  const [subscribedTopics, setSubscribedTopics] = useState([]);\n  const [alert, setAlert] = useState('');\n\n  const topics = ['LosAngeles', 'SanFrancisco', 'SouthernCalifornia']; // Available topics\n\n  const subscribeToTopic = (topic) => {\n    // Simulate subscribing to a topic\n    setSubscribedTopics((prev) => [...prev, topic]);\n    console.log(`Subscribed to ${topic} alerts`);\n  };\n\n  // Simulate receiving an alert for subscribed topics\n  useEffect(() => {\n    // Here, you would ideally use WebSocket or another method to listen for updates from the Kafka consumer\n    const interval = setInterval(() => {\n      if (subscribedTopics.length > 0) {\n        // Simulate receiving an alert for a subscribed topic\n        setAlert(`Weather alert for ${subscribedTopics.join(', ')}: Severe weather approaching!`);\n      }\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [subscribedTopics]);\n\n  return (\n    <div>\n      <h1>Weather Alerts</h1>\n      <div>\n        <h2>Subscribe to Alerts</h2>\n        {topics.map((topic) => (\n          <button key={topic} onClick={() => subscribeToTopic(topic)}>\n            Subscribe to {topic} Alerts\n          </button>\n        ))}\n      </div>\n      <div>\n        <h3>Subscribed Topics:</h3>\n        <ul>\n          {subscribedTopics.map((topic, index) => (\n            <li key={index}>{topic}</li>\n          ))}\n        </ul>\n      </div>\n      {alert && <div><strong>{alert}</strong></div>}\n    </div>\n  );\n};\n\nexport default WeatherAlerts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,MAAM,GAAG,CAAC,YAAY,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAC,CAAC;;EAErE,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC;IACAL,mBAAmB,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,KAAK,CAAC,CAAC;IAC/CE,OAAO,CAACC,GAAG,CAAC,iBAAiBH,KAAK,SAAS,CAAC;EAC9C,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIX,gBAAgB,CAACY,MAAM,GAAG,CAAC,EAAE;QAC/B;QACAT,QAAQ,CAAC,qBAAqBH,gBAAgB,CAACa,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC;MAC3F;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACV,gBAAgB,CAAC,CAAC;EAEtB,oBACEH,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3Bf,MAAM,CAACgB,GAAG,CAAEd,KAAK,iBAChBT,OAAA;QAAoBwB,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAACC,KAAK,CAAE;QAAAS,QAAA,GAAC,eAC7C,EAACT,KAAK,EAAC,SACtB;MAAA,GAFaA,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BtB,OAAA;QAAAkB,QAAA,EACGf,gBAAgB,CAACoB,GAAG,CAAC,CAACd,KAAK,EAAEgB,KAAK,kBACjCzB,OAAA;UAAAkB,QAAA,EAAiBT;QAAK,GAAbgB,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACLjB,KAAK,iBAAIL,OAAA;MAAAkB,QAAA,eAAKlB,OAAA;QAAAkB,QAAA,EAASb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/CID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAiDnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}