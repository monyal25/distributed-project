{"ast":null,"code":"var _jsxFileName = \"/Users/sumithramounika/Desktop/SCU courses/distributed systems/MY  DS/weather-app/weather-frontend/src/components/WeatherAlerts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAlerts = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8081');\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, data.message]);\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const handleSubscribe = location => {\n    const socket = new WebSocket('ws://localhost:8081');\n    socket.onopen = () => {\n      socket.send(JSON.stringify({\n        subscribe: true,\n        location\n      }));\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSubscribe('LosAngeles'),\n      children: \"Subscribe to LA Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSubscribe('NewYork'),\n      children: \"Subscribe to NY Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notifications:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherAlerts, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WeatherAlerts;\nexport default WeatherAlerts;\nvar _c;\n$RefreshReg$(_c, \"WeatherAlerts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherAlerts","_s","messages","setMessages","socket","WebSocket","onmessage","event","data","JSON","parse","prevMessages","message","close","handleSubscribe","location","onopen","send","stringify","subscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/sumithramounika/Desktop/SCU courses/distributed systems/MY  DS/weather-app/weather-frontend/src/components/WeatherAlerts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WeatherAlerts = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8081');\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages((prevMessages) => [...prevMessages, data.message]);\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const handleSubscribe = (location) => {\n    const socket = new WebSocket('ws://localhost:8081');\n    socket.onopen = () => {\n      socket.send(JSON.stringify({ subscribe: true, location }));\n    };\n  };\n\n  return (\n    <div>\n      <h2>Weather Alerts</h2>\n      <button onClick={() => handleSubscribe('LosAngeles')}>Subscribe to LA Alerts</button>\n      <button onClick={() => handleSubscribe('NewYork')}>Subscribe to NY Alerts</button>\n\n      <h3>Notifications:</h3>\n      <ul>\n        {messages.map((msg, index) => <li key={index}>{msg}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default WeatherAlerts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCL,WAAW,CAAEQ,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,IAAI,CAACI,OAAO,CAAC,CAAC;IAChE,CAAC;IAED,OAAO,MAAM;MACXR,MAAM,CAACS,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpC,MAAMX,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACnDD,MAAM,CAACY,MAAM,GAAG,MAAM;MACpBZ,MAAM,CAACa,IAAI,CAACR,IAAI,CAACS,SAAS,CAAC;QAAEC,SAAS,EAAE,IAAI;QAAEJ;MAAS,CAAC,CAAC,CAAC;IAC5D,CAAC;EACH,CAAC;EAED,oBACEhB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAAC,YAAY,CAAE;MAAAM,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrFzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAAC,SAAS,CAAE;MAAAM,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElFzB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAAqB,QAAA,EACGlB,QAAQ,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAAK7B,OAAA;QAAAqB,QAAA,EAAiBO;MAAG,GAAXC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}